package com.openapi.demo1.dto;

import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.openapi.demo1.dto.AmericanExpress;
import com.openapi.demo1.dto.Discover;
import com.openapi.demo1.dto.Mastercard;
import com.openapi.demo1.dto.Visa;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;


import java.util.*;
import javax.annotation.Generated;

/**
 * 
 */

@Schema(name = "Network", description = "")
@JsonIgnoreProperties(
  value = "network", // ignore manually set network, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the network to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "network", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = AmericanExpress.class, name = "AmericanExpress"),
  @JsonSubTypes.Type(value = Discover.class, name = "Discover"),
  @JsonSubTypes.Type(value = Mastercard.class, name = "Mastercard"),
  @JsonSubTypes.Type(value = Visa.class, name = "Visa")
})

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-10-07T17:34:59.232080700+07:00[Asia/Bangkok]")
public class Network {

  @JsonProperty("network")
  private String network;

  public Network network(String network) {
    this.network = network;
    return this;
  }

  /**
   * Processing card network
   * @return network
  */
  @NotNull 
  @Schema(name = "network", description = "Processing card network", required = true)
  public String getNetwork() {
    return network;
  }

  public void setNetwork(String network) {
    this.network = network;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Network network = (Network) o;
    return Objects.equals(this.network, network.network);
  }

  @Override
  public int hashCode() {
    return Objects.hash(network);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Network {\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

