package com.openapi.demo1.dto;

import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.openapi.demo1.dto.ApplePay;
import com.openapi.demo1.dto.DecryptedWallet;
import com.openapi.demo1.dto.GooglePay;
import com.openapi.demo1.dto.Payment3DS;
import com.openapi.demo1.dto.PaymentCard;
import com.openapi.demo1.dto.PaymentEMV;
import com.openapi.demo1.dto.PaymentSession;
import com.openapi.demo1.dto.PaymentToken;
import com.openapi.demo1.dto.PaymentTrack;
import com.openapi.demo1.dto.SamsungPay;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;


import java.util.*;
import javax.annotation.Generated;

/**
 * Payment &lt;a href&#x3D;\&quot;../docs?path&#x3D;docs/Resources/Guides/Payment-Sources/Source-Type.md\&quot;&gt;source&lt;/a&gt; details.
 */

@Schema(name = "Source", description = "Payment <a href=\"../docs?path=docs/Resources/Guides/Payment-Sources/Source-Type.md\">source</a> details.")
@JsonIgnoreProperties(
  value = "sourceType", // ignore manually set sourceType, it will be automatically generated by Jackson during serialization
  allowSetters = true // allows the sourceType to be set during deserialization
)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "sourceType", visible = true)
@JsonSubTypes({
  @JsonSubTypes.Type(value = ApplePay.class, name = "ApplePay"),
  @JsonSubTypes.Type(value = DecryptedWallet.class, name = "DecryptedWallet"),
  @JsonSubTypes.Type(value = GooglePay.class, name = "GooglePay"),
  @JsonSubTypes.Type(value = Payment3DS.class, name = "Payment3DS"),
  @JsonSubTypes.Type(value = PaymentCard.class, name = "PaymentCard"),
  @JsonSubTypes.Type(value = PaymentEMV.class, name = "PaymentEMV"),
  @JsonSubTypes.Type(value = PaymentSession.class, name = "PaymentSession"),
  @JsonSubTypes.Type(value = PaymentToken.class, name = "PaymentToken"),
  @JsonSubTypes.Type(value = PaymentTrack.class, name = "PaymentTrack"),
  @JsonSubTypes.Type(value = SamsungPay.class, name = "SamsungPay")
})

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-10-07T17:34:59.232080700+07:00[Asia/Bangkok]")
public class Source {

  @JsonProperty("sourceType")
  private String sourceType;

  public Source sourceType(String sourceType) {
    this.sourceType = sourceType;
    return this;
  }

  /**
   * Payment source type for a transaction request.  Valid Values: * <a href=\"../docs?path=docs/Online-Mobile-Digital/Wallets-AltPayments/Apple-Pay/Apple-Pay.md\">ApplePay</a> * <a href=\"../docs?path=docs/Online-Mobile-Digital/Wallets-AltPayments/Google-Pay/Google-Pay.md\">GooglePay</a> * <a href=\"../docs?path=docs/Resources/Guides/Payment-Sources/Payment-Card.md\">PaymentCard</a> * <a href=\"../docs?path=docs/Resources/API-Documents/Payments_VAS/Payment-Token.md\">PaymentToken</a> * <a href=\"../docs?path=docs/In-Person/Encrypted-Payments/EMV.md\">PaymentEMV</a> * <a href=\"../docs?path=docs/In-Person/Encrypted-Payments/Track.md\">PaymentTrack</a> * <a href=\"../docs?path=docs/Online-Mobile-Digital/Secure-Data-Capture/Secure-Data-Capture.md\">PaymentSession</a> 
   * @return sourceType
  */
  @NotNull @Size(max = 256) 
  @Schema(name = "sourceType", example = "PaymentCard", description = "Payment source type for a transaction request.  Valid Values: * <a href=\"../docs?path=docs/Online-Mobile-Digital/Wallets-AltPayments/Apple-Pay/Apple-Pay.md\">ApplePay</a> * <a href=\"../docs?path=docs/Online-Mobile-Digital/Wallets-AltPayments/Google-Pay/Google-Pay.md\">GooglePay</a> * <a href=\"../docs?path=docs/Resources/Guides/Payment-Sources/Payment-Card.md\">PaymentCard</a> * <a href=\"../docs?path=docs/Resources/API-Documents/Payments_VAS/Payment-Token.md\">PaymentToken</a> * <a href=\"../docs?path=docs/In-Person/Encrypted-Payments/EMV.md\">PaymentEMV</a> * <a href=\"../docs?path=docs/In-Person/Encrypted-Payments/Track.md\">PaymentTrack</a> * <a href=\"../docs?path=docs/Online-Mobile-Digital/Secure-Data-Capture/Secure-Data-Capture.md\">PaymentSession</a> ", required = true)
  public String getSourceType() {
    return sourceType;
  }

  public void setSourceType(String sourceType) {
    this.sourceType = sourceType;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Source source = (Source) o;
    return Objects.equals(this.sourceType, source.sourceType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourceType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Source {\n");
    sb.append("    sourceType: ").append(toIndentedString(sourceType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

